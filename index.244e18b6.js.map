{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCQA,IAAM,EAAY,SAAS,aAAa,CAAC,cACnC,EAAQ,EAAU,aAAa,CAAC,SAEhC,EAAkB,EAAU,aAAa,CAAC,eAC1C,EAAkB,EAAU,aAAa,CAAC,eAE1C,EAAqB,EAAU,aAAa,CAAC,kBAC7C,EAAqB,EAAU,aAAa,CAAC,kBAE/C,EAAsB,EAAM,QAAQ,CAAC,MAAM,CAC3C,EAAyB,EAAM,gBAAgB,CAAC,QAAQ,CAAC,MAAM,AAEnE,CAAA,EAAgB,SAAS,CAAG,WACtB,EAlBW,IAmBb,EAAM,MAAM,CAAC,EAAM,gBAAgB,CAAC,SAAS,CAAC,CAAA,IAG5C,EAAE,EAvBS,GAwBb,CAAA,EAAgB,QAAQ,CAAG,EAD7B,EAtBe,KA0BX,GACF,CAAA,EAAgB,QAAQ,CAAG,UAD7B,CAGF,EAEA,EAAgB,SAAS,CAAG,WACtB,EAjCW,GAkCb,EAAM,gBAAgB,CAAC,MAAM,GAG3B,EAAE,EArCS,GAsCb,CAAA,EAAgB,QAAQ,CAAG,EAD7B,EArCe,IAyCX,GACF,CAAA,EAAgB,QAAQ,CAAG,UAD7B,CAGF,EAEA,EAAmB,YAAY,CAAG,WAC5B,EA3Cc,IA4ChB,EAAI,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAC,CAD/B,EAEI,EAAI,MAAM,CAAC,EAAI,gBAAgB,CAAC,SAAS,GAC3C,GAGE,EAAE,EAlDY,GAmDhB,CAAA,EAAmB,QAAQ,CAAG,EADhC,EAjDkB,KAqDd,GACF,CAAA,EAAmB,QAAQ,CAAG,UADhC,CAGF,EAEA,EAAmB,YAAY,CAAG,WAC5B,EA5Dc,GA6DhB,EAAI,EAAM,QAAQ,EAAE,OAAO,CAAC,SAAC,CAD/B,EACuC,OAAA,EAAI,gBAAgB,CAAC,MAAM,E,GAG9D,EAAE,EAhEY,GAiEhB,CAAA,EAAmB,QAAQ,CAAG,EADhC,EAhEkB,IAoEd,GACF,CAAA,EAAmB,QAAQ,CAAG,UADhC,CAGF,EAEA,EAAU,gBAAgB,CAAC,QAAS,SAAC,CAArC,EACE,OAAQ,EAAE,MAAM,EACd,KAAK,EACH,EAAgB,SAAS,GAEzB,KAEF,MAAK,EACH,EAAgB,SAAS,GAEzB,KAEF,MAAK,EACH,EAAmB,YAAY,GAE/B,KAEF,MAAK,EACH,EAAmB,YAAY,EAMnC,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar MIN_ROWS = 2;\nvar MAX_ROWS = 10;\nvar MIN_COLUMNS = 2;\nvar MAX_COLUMNS = 10;\nvar container = document.querySelector(\".container\");\nvar tbody = container.querySelector(\"tbody\");\nvar buttonAppendRow = container.querySelector(\".append-row\");\nvar buttonRemoveRow = container.querySelector(\".remove-row\");\nvar buttonAppendColumn = container.querySelector(\".append-column\");\nvar buttonRemoveColumn = container.querySelector(\".remove-column\");\nvar currentNumberOfRows = tbody.children.length;\nvar currentNumberOfColumns = tbody.lastElementChild.children.length;\nbuttonAppendRow.appendRow = function() {\n    if (currentNumberOfRows < MAX_ROWS) tbody.append(tbody.lastElementChild.cloneNode(true));\n    if (++currentNumberOfRows > MIN_ROWS) buttonRemoveRow.disabled = \"\";\n    if (currentNumberOfRows === MAX_ROWS) buttonAppendRow.disabled = \"disabled\";\n};\nbuttonRemoveRow.removeRow = function() {\n    if (currentNumberOfRows > MIN_ROWS) tbody.lastElementChild.remove();\n    if (--currentNumberOfRows > MIN_ROWS) buttonAppendRow.disabled = \"\";\n    if (currentNumberOfRows === MIN_ROWS) buttonRemoveRow.disabled = \"disabled\";\n};\nbuttonAppendColumn.appendColumn = function() {\n    if (currentNumberOfColumns < MAX_COLUMNS) _to_consumable_array(tbody.children).forEach(function(row) {\n        row.append(row.lastElementChild.cloneNode());\n    });\n    if (++currentNumberOfColumns > MIN_COLUMNS) buttonRemoveColumn.disabled = \"\";\n    if (currentNumberOfColumns === MAX_COLUMNS) buttonAppendColumn.disabled = \"disabled\";\n};\nbuttonRemoveColumn.removeColumn = function() {\n    if (currentNumberOfColumns > MIN_COLUMNS) _to_consumable_array(tbody.children).forEach(function(row) {\n        return row.lastElementChild.remove();\n    });\n    if (--currentNumberOfColumns > MIN_COLUMNS) buttonAppendColumn.disabled = \"\";\n    if (currentNumberOfColumns === MIN_COLUMNS) buttonRemoveColumn.disabled = \"disabled\";\n};\ncontainer.addEventListener(\"click\", function(e) {\n    switch(e.target){\n        case buttonAppendRow:\n            buttonAppendRow.appendRow();\n            break;\n        case buttonRemoveRow:\n            buttonRemoveRow.removeRow();\n            break;\n        case buttonAppendColumn:\n            buttonAppendColumn.appendColumn();\n            break;\n        case buttonRemoveColumn:\n            buttonRemoveColumn.removeColumn();\n            break;\n        default:\n            break;\n    }\n});\n\n//# sourceMappingURL=index.244e18b6.js.map\n","'use strict';\n\nconst MIN_ROWS = 2;\nconst MAX_ROWS = 10;\n\nconst MIN_COLUMNS = 2;\nconst MAX_COLUMNS = 10;\n\nconst container = document.querySelector('.container');\nconst tbody = container.querySelector('tbody');\n\nconst buttonAppendRow = container.querySelector('.append-row');\nconst buttonRemoveRow = container.querySelector('.remove-row');\n\nconst buttonAppendColumn = container.querySelector('.append-column');\nconst buttonRemoveColumn = container.querySelector('.remove-column');\n\nlet currentNumberOfRows = tbody.children.length;\nlet currentNumberOfColumns = tbody.lastElementChild.children.length;\n\nbuttonAppendRow.appendRow = () => {\n  if (currentNumberOfRows < MAX_ROWS) {\n    tbody.append(tbody.lastElementChild.cloneNode(true));\n  }\n\n  if (++currentNumberOfRows > MIN_ROWS) {\n    buttonRemoveRow.disabled = '';\n  }\n\n  if (currentNumberOfRows === MAX_ROWS) {\n    buttonAppendRow.disabled = 'disabled';\n  }\n};\n\nbuttonRemoveRow.removeRow = () => {\n  if (currentNumberOfRows > MIN_ROWS) {\n    tbody.lastElementChild.remove();\n  }\n\n  if (--currentNumberOfRows > MIN_ROWS) {\n    buttonAppendRow.disabled = '';\n  }\n\n  if (currentNumberOfRows === MIN_ROWS) {\n    buttonRemoveRow.disabled = 'disabled';\n  }\n};\n\nbuttonAppendColumn.appendColumn = () => {\n  if (currentNumberOfColumns < MAX_COLUMNS) {\n    [...tbody.children].forEach((row) => {\n      row.append(row.lastElementChild.cloneNode());\n    });\n  }\n\n  if (++currentNumberOfColumns > MIN_COLUMNS) {\n    buttonRemoveColumn.disabled = '';\n  }\n\n  if (currentNumberOfColumns === MAX_COLUMNS) {\n    buttonAppendColumn.disabled = 'disabled';\n  }\n};\n\nbuttonRemoveColumn.removeColumn = () => {\n  if (currentNumberOfColumns > MIN_COLUMNS) {\n    [...tbody.children].forEach((row) => row.lastElementChild.remove());\n  }\n\n  if (--currentNumberOfColumns > MIN_COLUMNS) {\n    buttonAppendColumn.disabled = '';\n  }\n\n  if (currentNumberOfColumns === MIN_COLUMNS) {\n    buttonRemoveColumn.disabled = 'disabled';\n  }\n};\n\ncontainer.addEventListener('click', (e) => {\n  switch (e.target) {\n    case buttonAppendRow:\n      buttonAppendRow.appendRow();\n\n      break;\n\n    case buttonRemoveRow:\n      buttonRemoveRow.removeRow();\n\n      break;\n\n    case buttonAppendColumn:\n      buttonAppendColumn.appendColumn();\n\n      break;\n\n    case buttonRemoveColumn:\n      buttonRemoveColumn.removeColumn();\n\n      break;\n\n    default:\n      break;\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","container","document","querySelector","tbody","buttonAppendRow","buttonRemoveRow","buttonAppendColumn","buttonRemoveColumn","currentNumberOfRows","children","currentNumberOfColumns","lastElementChild","appendRow","append","cloneNode","disabled","removeRow","remove","appendColumn","forEach","row","removeColumn","addEventListener","e","target"],"version":3,"file":"index.244e18b6.js.map"}